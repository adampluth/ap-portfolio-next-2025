name: Code Validation & Auto-Merge to Main

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

permissions:
    contents: write
    pull-requests: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-

      - name: Install Dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  type-check:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: node-cache-${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            node-cache-${{ runner.os }}-npm-

      - name: Install Dependencies
        run: npm ci

      - name: Run TypeScript Type Checking
        run: npm run type-check

  build:
    runs-on: ubuntu-latest
    needs: [lint, type-check]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-

      - name: Install Dependencies
        run: npm ci

      - name: Build Project
        run: npm run build

  auto-merge:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/dev' && !contains(github.event.head_commit.message, '[no-auto-merge]')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Fetch and Merge dev into main
        run: |
          git fetch origin main
          git checkout main
          git merge dev --no-ff --commit -m "Auto-merged dev into main"
          git push origin main || echo "Merge failed. Please check conflicts."
